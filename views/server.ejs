<% layout('layout') %>
<div class="modal fade" id="modalConfig" tabindex="-1" aria-labelledby="modalLabel" aria-hidden="true">
  <div class="modal-dialog modal-xl modal-dialog-centered modal-dialog-scrollable">
    <div class="modal-content">
      <div class="modal-header row pb-0">
        <h1 class="modal-title fs-5 col" id="modalLabel">"<%= server %>" Configure</h1>
        <div class="col-auto me-auto">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" aria-label="Close">
            <span class="material-symbols-outlined" data-bs-toggle="tooltip" data-bs-placement="bottom" data-bs-title="Discard">close</span>
          </button>
        </div>
        <ul class="nav nav-pills nav-fill mt-2" id="configs" role="tablist">
          <li class="nav-item" role="presentation">
            <button class="nav-link active" id="home-tab" data-bs-toggle="tab" data-bs-target="#home-tab-pane" type="button" role="tab" aria-controls="home-tab-pane" aria-selected="true">Options</button>
          </li>
          <li class="nav-item" role="presentation">
            <button class="nav-link" id="profile-tab" data-bs-toggle="tab" data-bs-target="#profile-tab-pane" type="button" role="tab" aria-controls="profile-tab-pane" aria-selected="false">File System</button>
          </li>
        </ul>
      </div>
      <div class="modal-body">
        <div class="tab-content" id="myTabContent">
          <div class="tab-pane fade show active" id="home-tab-pane" role="tabpanel" aria-labelledby="home-tab" tabindex="0">
            <div class="input-group">
              <datalist id="javaList">
                <% for (i = 0; i < javas.length; i++) { %>
                <option value="<%= javas[i] %>">
                <% } %>
              </datalist>
              <input type="text" style="border-bottom-left-radius: 0;" class="form-control bg-white" list="javaList" value="java" placeholder="java location" id="java" />
              <span class="input-group-text">-jar</span>
              <datalist id="jarList">
                <% for (i = 0; i < jarfiles.length; i++) { %>
                <option value="<%= jarfiles[i] %>">
                <% } %>
              </datalist>
              <input type="text" class="form-control bg-white" list="jarList" placeholder="jar filename" id="jarfilename" />
              <span class="input-group-text">-Xmx</span>
              <input type="number" id="Xmx" onchange="changemax(this)" oninput="changemax(this)" min="0.5" step="0.5" max="<%= Math.round(maxRAM/1024) %>" value="0.5" class="form-control bg-white" style="border-color:#ced4da;z-index:1; max-width:80px;" placeholder="Max">
              <span class="input-group-text">G</span>
              <span class="input-group-text">-Xms</span>
              <input type="number" id="Xms" onchange="changemin(this)" oninput="changemin(this)" min="0.5" step="0.5" max="<%= Math.round(maxRAM/1024) %>" value="0.5" class="form-control bg-white" style="border-color:#ced4da;z-index:1; max-width:80px;" placeholder="Min">
              <span class="input-group-text" style="border-bottom-right-radius: 0;">G</span>
            </div>
            <div class="input-group mb-2">
              <input type="text" autocomplete="off" class="form-control bg-white" style="border-top-left-radius: 0;border-top-right-radius: 0;border-color:#ced4da;z-index:1;" placeholder="Extra Argument" id="arg">
            </div>

            <label for="maxRAM" class="form-label">Max Memory (-Xmx)</label>
            <input type="range" onchange="changemax(this)" oninput="changemax(this)" class="form-range" min="0.5" max="<%= Math.round(maxRAM/1024) %>" step="0.5" id="maxRAM" value="4">
            <label for="minRAM" class="form-label">Min Memory (-Xms)</label>
            <input type="range" onchange="changemin(this)" oninput="changemin(this)" class="form-range mb-2" min="0.5" max="<%= Math.round(maxRAM/1024) %>" step="0.5" id="minRAM" value="4">

            <button type="button" class="btn btn-success" onclick="saveConfig()"><span class="material-symbols-outlined" data-bs-toggle="tooltip" data-bs-placement="bottom" data-bs-title="Save">Save</span></button>

            <button type="button" class="btn btn-success" data-bs-toggle="tooltip" data-bs-placement="bottom" data-bs-title="Auto Reboot"><span class="material-symbols-outlined">event_repeat</span></button>
            <button type="button" class="btn btn-danger" data-bs-toggle="tooltip" data-bs-placement="bottom" data-bs-title="No Auto Reboot"><span class="material-symbols-outlined">event_repeat</span></button>
          </div>
          <div class="tab-pane fade" id="profile-tab-pane" role="tabpanel" aria-labelledby="profile-tab" tabindex="0">

          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<div class="card text-bg-secondary m-2 overflow-hidden flex-grow-1" id="card">
  <div class="card-header row">
    <h5 class="col d-flex mb-0 justify-content-center align-items-center"><%= server %></h5>
    <div class="btn-toolbar col-auto" role="toolbar" aria-label="Toolbar with button groups">
      <div class="btn-group me-2" role="group">
        <button type="button" class="btn btn-config" data-bs-toggle="modal" data-bs-target="#modalConfig"><span class="material-symbols-outlined" data-bs-toggle="tooltip" data-bs-placement="bottom" data-bs-title="Configure">Settings</span></button>
      </div>
      <div class="btn-group me-2" role="group">
        <button type="button" onclick='socket.emit("scram", "<%= server %>")' class="btn btn-scram"><span class="material-symbols-outlined" data-bs-toggle="tooltip" data-bs-placement="bottom" data-bs-title="Scram">emergency_home</span></button>
      </div>
      <div class="btn-group me-2" role="group">
        <button type="button" onclick='socket.emit("reboot", "<%= server %>")' class="btn btn-reboot text-white"><span class="material-symbols-outlined" data-bs-toggle="tooltip" data-bs-placement="bottom" data-bs-title="Reboot">restart_alt</span></button>
      </div>
      <div class="btn-group" id="shutbtn" role="group" style="display:none;">
        <button type="button" onclick='socket.emit("toggle", "<%= server %>")' class="btn btn-danger"><span class="material-symbols-outlined" data-bs-toggle="tooltip" data-bs-placement="bottom" data-bs-title="Shutdown">power_settings_new</span></button>
      </div>
      <div class="btn-group" id="bootbtn" role="group">
        <button type="button" onclick='socket.emit("toggle", "<%= server %>")' class="btn btn-success"><span class="material-symbols-outlined" data-bs-toggle="tooltip" data-bs-placement="bottom" data-bs-title="Power on">power_settings_new</span></button>
      </div>
    </div>
  </div>
  <div class="card-body d-flex flex-column-reverse overflow-scroll" style="height:300px;white-space: pre-line;overflow-wrap: anywhere;" id="logs">
  </div>
  <div class="card-footer p-0">
    <div class="input-group flex-nowrap" style="margin:-1px; width:unset;">
      <span class="input-group-text" id="addon-wrapping" style="border-top-left-radius:0;">#</span>
      <input autocomplete="off" id="cmd" type="text" style="box-shadow:none; border:0;z-index:0;" class="form-control bg-white" placeholder="Command Line" aria-label="Command Line" aria-describedby="addon-wrapping">
      <button onclick="sendCmd()" id="sendCmd" class="btn btn-reboot text-white" style="border-top-right-radius:0; color:#666;" type="button"><span class="material-symbols-outlined">send</span></button>
    </div>
  </div>
</div>

<script>
  const tooltipTriggerList = document.querySelectorAll('[data-bs-toggle="tooltip"]')
  const tooltipList = [...tooltipTriggerList].map(tooltipTriggerEl => new bootstrap.Tooltip(tooltipTriggerEl))
  socket.on("log", data => {
    if (data["folder"] == "<%= server %>") {
      $("#logs").text( $("#logs").text() + `${data["msg"]}`)
    }
  })

  $("#cmd").on("keypress", function(event) {
  if (event.key === "Enter") {
    event.preventDefault();
    $("#sendCmd").click();
  }
});

  socket.on("init", () => {
    socket.emit("fetch", "<%= server %>")
  })

  socket.on("update_config", data => {
    if (data["folder"] == "<%= server %>") {
      configs = data["config"]
      $("#arg").val(configs["arg"])
      $("#java").val(configs["java"])
      $("#jarfilename").val(configs["filename"])
      $("#maxRAM").val(configs["Xmx"])
      $("#minRAM").val(configs["Xms"])
      $("#minRAM").attr("max", configs["Xmx"])
      $("#Xms").attr("max", configs["Xmx"])
      $("#Xmx").val(configs["Xmx"])
      $("#Xms").val(configs["Xms"])
    }
  })
  function changemax(o){
    $('#Xmx').val($(o).val())
    $('#maxRAM').val($(o).val())
    if ($("#Xms").val()*1 > $(o).val()*1 || $("#minRAM").val()*1 > $(o).val()*1){
      $("#minRAM").val($(o).val())
      $("#Xms").val($(o).val())
    }
    if ($(o).val() == "0.5"){
      $("#minRAM").prop('disabled', true);
    }else{
      $("#minRAM").prop('disabled', false);
    }
    $("#minRAM").attr("max", $(o).val())
    $("#Xms").attr("max", $(o).val())
  }

  function changemin(o){
    $('#Xms').val($(o).val())
    $('#minRAM').val($(o).val())
  }

  function sendCmd() {
    if ($("#cmd").val() != "") {
      socket.emit("cmd", {
        cmd: $("#cmd").val(),
        folder: "<%= server %>"
      })
      $("#cmd").val("")
    }
  }

  function saveConfig() {
    socket.emit("config", {
      java: $("#java").val(),
      folder: "<%= server %>",
      arg: $("#arg").val(),
      filename: $("#jarfilename").val(),
      Xmx: $("#Xmx").val(),
      Xms: $("#Xms").val()
    })
  }
</script>